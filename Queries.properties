Q_APPFUNCS1=SELECT A.* FROM COMMON~KA~APP_FUNCS A  WHERE A.PARENT_ID = ? ORDER BY A.IDX
#{0}=PORJECT_ID
#{1}=GROUP_ID
Q_APPFUNCS4=SELECT A.ID, A.ID AS APP_ID, A.NAME, A.DESCRIPTION, A.URL, A.TARGET, '0' AS PARENT_ID, 0 AS IDX, 1 AS LEVEL, '0' AS HIERARCHY, 'F' AS LEAF, A.ICON_URL, A.STATUS FROM COMMON~KA~APPS A WHERE A.ID = ? UNION ALL SELECT DISTINCT A.ID, A.APP_ID, A.NAME, A.DESCRIPTION, A.URL, A.TARGET, A.PARENT_ID, A.IDX, A.LEVEL, A.HIERARCHY, A.LEAF, A.ICON_URL, A.STATUS FROM COMMON~KA~APP_FUNCS A INNER JOIN COMMON~KA~GROUPS B ON B.APP_ID = A.APP_ID INNER JOIN COMMON~KA~GROUP_APP_FUNCS C ON  C.GROUP_ID = B.ID AND C.APP_FUNC_ID = A.ID WHERE B.ID = ? ORDER BY HIERARCHY, IDX
#{0}=PORJECT_ID
#{1}=PORJECT_ID
#{1}=USER_ID
Q_APPFUNCS5=SELECT A.ID, A.ID AS APP_ID, A.NAME, A.DESCRIPTION, A.URL, A.TARGET, '0' AS PARENT_ID, 0 AS IDX, 1 AS LEVEL, 'F' AS LEAF, A.ICON_URL, A.STATUS FROM COMMON~KA~APPS A WHERE A.ID = ? UNION ALL SELECT DISTINCT A.ID, A.APP_ID, A.NAME, A.DESCRIPTION, A.URL, A.TARGET, A.PARENT_ID, A.IDX, A.LEVEL, A.LEAF, A.ICON_URL, A.STATUS FROM COMMON~KA~APP_FUNCS A INNER JOIN COMMON~KA~GROUPS B ON B.APP_ID = A.APP_ID INNER JOIN COMMON~KA~GROUP_USERS P ON P.GROUP_ID = B.ID INNER JOIN COMMON~KA~GROUP_APP_FUNCS C ON  C.GROUP_ID = B.ID AND C.APP_FUNC_ID = A.ID WHERE A.APP_ID = ? AND P.USER_ID = ? ORDER BY LEVEL, PARENT_ID, IDX

Q_APPS1=SELECT * FROM COMMON.APPS
#{0}=USER_ID    
Q_APPS6=SELECT A.*, GU.GROUP_ID, G.GROUP_TYPE FROM COMMON~KA~APPS A INNER JOIN COMMON.GROUPS G ON G.APP_ID = A.ID AND G.GROUP_TYPE = 'A' INNER JOIN COMMON.GROUP_USERS GU ON GU.GROUP_ID = G.ID WHERE GU.USER_ID = ? ORDER BY A.ID
#{0}=APP_ID
Q_APPVERSIONS2=SELECT DISTINCT A.VERSION, A.LABEL, A.PUBLISH_DATE FROM COMMON~KA~APP_VERSIONS A WHERE A.APP_ID = ? ORDER BY A.VERSION DESC
#{0}=APP_ID
#{1}=VERSION
Q_APPVERSIONS3=SELECT A.* FROM COMMON~KA~APP_VERSIONS A WHERE A.APP_ID = ? AND A.VERSION BETWEEN (? - 5) AND ? ORDER BY A.VERSION DESC, A.IDX
#{0}=PRJKOD
Q_GROUPS1=SELECT A.*, B.NAME AS APP_NAME FROM COMMON.GROUPS A INNER JOIN COMMON.GROUP_USERS P ON P.GROUP_ID = A.ID INNER JOIN COMMON.APPS B ON B.ID = A.APP_ID WHERE P.USER_ID = ?
Q_GROUPS2=SELECT MAX(ID) AS ID FROM COMMON~KA~GROUPS
#{0}=APP_ID
#{1}=USER_ID
Q_GROUPS5=SELECT G.*, AP.NAME AS APP_NAME FROM COMMON~KA~GROUPS G INNER JOIN COMMON~KA~GROUP_USERS GK ON GK.GROUP_ID = G.ID INNER JOIN COMMON~KA~APPS AP ON AP.ID = G.APP_ID  WHERE G.APP_ID = ? AND GK.USER_ID = ?
#{0}=GROUP_ID
Q_GROUP_FUNCS1=SELECT A.* FROM COMMON~KA~GROUP_APP_FUNCS A WHERE A.GROUP_ID = ?
#{0}=ID
Q_USERS1=SELECT A.*, B.NAME AS POSITION_NAME COMMON~KA~USERS A LEFT JOIN COMMON~KA~COMMONS B ON B.ID = A.POSITION WHERE A.ID = ?
#{0}=ID
#{0}=CITIZENSHIP_NU
Q_USERS2=SELECT A.*, B.NAME AS POSITION_NAME COMMON~KA~USERS A LEFT JOIN COMMON~KA~COMMONS B ON B.ID = A.POSITION WHERE A.ID = ? OR A.CITIZENSHIP_NU = ? 
#{0}=EMAIL
Q_USERS3=SELECT A.*, B.NAME AS POSITION_NAME FROM COMMON~KA~USERS A LEFT JOIN COMMON~KA~COMMONS B ON B.ID = A.POSITION WHERE A.EMAIL = ?
#{0}=ID
#{0}=EMAIL
Q_USERS4=SELECT A.*, B.NAME AS POSITION_NAME COMMON~KA~USERS A LEFT JOIN COMMON~KA~COMMONS B ON B.ID = A.POSITION WHERE A.ID = ? OR A.EMAIL = ? 
#{0}=PHONE_NU1
Q_USERS5=SELECT A.*, B.NAME AS POSITION_NAME COMMON~KA~USERS A LEFT JOIN COMMON~KA~COMMONS B ON B.ID = A.POSITION WHERE A.ID = ? OR A.PHONE_NU1 = ?
#{0}=ADSOYADI
Q_USERS6=SELECT A.*, B1.NAME AS TITLE_NAME, B2.NAME AS POSITIN_NAME FROM COMMON~KA~USERS A LEFT JOIN COMMON~KA~COMMONS B1 ON B1.ID = A.TITLE LEFT JOIN COMMON~KA~COMMONS B2 ON B2.ID = A.POSITION WHERE (A.NAME LIKE ? OR A.SURNAME LIKE ? )
#Must be used with paging
Q_USERS_ALL=SELECT A.*, B1.NAME AS TITLE_NAME, B2.NAME AS POSITIN_NAME FROM COMMON~KA~USERS A LEFT JOIN COMMON~KA~COMMONS B1 ON B1.ID = A.TITLE LEFT JOIN COMMON~KA~COMMONS B2 ON B2.ID = A.POSITION 
#{0}=CITIZENSHIP_NU
Q_USERS7=SELECT A.*, B.NAME AS POSITION_NAME COMMON~KA~USERS A LEFT JOIN COMMON~KA~COMMONS B ON B.ID = A.POSITION WHERE A.ID = ? OR A.CITIZENSHIP_NU = ?
Q_LOGIN_HISTORY1=SELECT MAX(IDX) AS IDX FROM COMMON~KA~LOGIN_HISTORY
Q_PWD_HISTORY1=SELECT MAX(IDX) AS IDX FROM COMMON~KA~PWD_HISTORY
#{0}=GRPKOD
Q_GROUP_USERS1=SELECT P.*, U.NAME AS USER_NAME, U.SURNAME AS USER_SURNAME, U.EMAIL AS USER_EMAIL, U.PHONE_NU2 AS USER_PHONE_NU2, B.NAME AS USER_TITLE_NAME FROM  COMMON.GROUP_USERS P INNER JOIN COMMON.USERS U ON U.ID = P.USER_ID LEFT JOIN COMMON.COMMONS B ON B.ID = U.TITLE WHERE P.GROUP_ID = ?
#{1}=PARENT_ID
Q_COMMONS_PARENT_ID1=SELECT C1.*, C2.PARENT_ID AS P2_ID, C2.NAME AS PARENT_NAME FROM COMMON~KA~COMMONS C1 LEFT JOIN COMMON~KA~COMMONS C2 ON C2.ID = C1.PARENT_ID WHERE C1.PARENT_ID = ?
Q_GROUP_USERS_HISTORY1=SELECT MAX(IDX) AS IDX FROM COMMON~KA~GROUP_USERS_HISTORY
Q_GROUP_APP_FUNCS_HISTORY1=SELECT MAX(IDX) AS IDX FROM COMMON~KA~GROUP_APP_FUNCS_HISTORY
#{0}=GROUP_CODE
#{1}=ID
#{2}=ID
Q_COMMONS1=SELECT MAX(ID) AS ID FROM COMMON~KA~COMMONS WHERE GROUP_CODE = ? AND ID >= ? AND ID < ?
#{0}=TABLO
#{1}=SEMA
Q_EXPORT1=SELECT '%1$s' AS SOURCE_SCHEMA,  '%2$s' AS SOURCE_TABLE, COUNT(*) AS SOURCE_COUNT, 0 AS TARGET_COUNT FROM %1$s~KA~%2$s
#REGAKTARIM2=%2$s #{0}=SEMA
#SRGAKTARIM2=SELECT * FROM %1$s~KA~AKTARIM ORDER BY GRPKOD, SIRNU
Q_EXPORT2=SELECT * FROM COMMON~KA~EXPORTS WHERE SOURCE_SCHEMA = ? AND TARGET_SCHEMA = ? ORDER BY GROUP_CODE, IDX
#{0}=SEMA
SILAKTARIM1=DELETE FROM {0}~KA~AKTARIM
#{0}=TABLO
#{1}=SEMA
SILAKTARIM2=DELETE FROM {0}~KA~{1}
SRGKYTNU1=SELECT MAX(KYTNU) AS KYTNU FROM ORTAK~KA~KYTNU